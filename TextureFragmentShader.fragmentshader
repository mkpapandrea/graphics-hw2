#version 330 core


//MULTIEARTH FRAGMENT SHADER

// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 Position_worldspace;
in vec3 vertexNormal_cameraspace;

in vec3 EyeDirection_cameraspace;
in vec3 LightDirection_cameraspace;


// Ouput data
out vec3 color;

// Values that stay constant for the whole mesh.

uniform sampler2D tex_elevation;
uniform sampler2D tex_water;
uniform sampler2D tex_night;
uniform sampler2D tex_clouds;
uniform sampler2D tex_color;

uniform vec3 LightPosition_worldspace;
uniform mat4 MV;
uniform int draw_mode;

vec3 makeLightColor(){
  vec3 LightColor= vec3(1,1,1);
  return LightColor;
}

float makeLightPower(){
  float LightPower= 100.0f;
  return LightPower;
}


float makeCosTheta(){
  vec3 vertnorm= normalize( vertexNormal_cameraspace );
  vec3 lidi= normalize( LightDirection_cameraspace );
   float cosTheta = clamp( dot( vertnorm,lidi ), 0,1 );
   return cosTheta;
}


float makeInverseCos(){
  vec3 vertnorm= normalize( vertexNormal_cameraspace );
  vec3 lidi= normalize( LightDirection_cameraspace );
vec3 eyedi = normalize(EyeDirection_cameraspace);
  vec3 rflct = reflect(-lidi,vertnorm);
  float cosAlpha = clamp( dot( eyedi,rflct ), 0,1 );
  return cosAlpha;
}


void main(){

	vec3 DiffuseColor = texture( tex_color, UV ).bgr;
  vec3 SpecularColor = vec3(0.3,0.3,0.3);

  float distance = length( LightPosition_worldspace - Position_worldspace );
   

   if (draw_mode == 0) 
   	color = vec3(1, 0, 0);
   else if (draw_mode == 1) 
   	color = texture( tex_elevation, UV ).bgr;
   else if (draw_mode == 2) 
   	color = texture( tex_water, UV ).bgr;
   else if (draw_mode == 3) 
   	color = texture( tex_night, UV ).bgr;
   else if (draw_mode == 4) 
   	color = texture( tex_clouds, UV ).bgr;
   else if (draw_mode == 5) 
   	color = texture( tex_color, UV ).bgr;

  // simple multi-texturing 

  else if (draw_mode == 6)
   	color = mix(texture(tex_clouds,UV).bgr, texture(tex_color,UV).bgr, 0.75);

  else if (draw_mode == 7)
    color= DiffuseColor * makeLightColor() * makeLightPower() * makeCosTheta() / (distance * distance);

  else if (draw_mode == 8)
    if(texture( tex_water, UV).b > 0 && texture( tex_water, UV).g > 0 && texture( tex_water, UV).r > 0)
      color = DiffuseColor + SpecularColor * makeLightColor() * makeLightPower() * pow(makeInverseCos(),1) / (distance*distance);
		else
      color = texture( tex_color, UV).bgr;
    
  else if (draw_mode == 9)
    color = mix(texture(tex_night,UV).bgr, texture(tex_color ,UV).bgr, makeCosTheta());
}	